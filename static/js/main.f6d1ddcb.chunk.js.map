{"version":3,"sources":["info-links/modal-screen.tsx","info-links/index.tsx","server-list/detailed-list.tsx","server-list/local-servers.ts","server-list/types.ts","server-list/index.tsx","server-state/components/motd.tsx","server-state/components/online.tsx","server-state/components/player-count.tsx","server-state/components/player-item.tsx","server-state/components/player-list.tsx","server-state/components/server-avatar.tsx","server-state/components/version.tsx","server-state/details.tsx","server-state/error.tsx","server-state/loading.tsx","server-state/index.tsx","theme.tsx","app.tsx","index.tsx"],"names":["ModalScreen","title","children","useState","isModalVisible","setIsModalVisible","Button","onClick","variant","Modal","opened","onClose","size","Item","List","About","component","target","rel","href","FAQ","Title","order","Code","InfoLinks","Center","style","padding","DetailedList","servers","onDelete","length","toParam","url","fullUrl","URL","window","location","searchParams","append","items","map","server","del","Box","height","Tooltip","label","CloseButton","Card","Group","position","weight","name","searchStore","localforage","createInstance","addSearch","a","getItem","entry","obj","lastAccess","totalHits","setItem","Date","now","newEntry","removeSearch","removeItem","getLocalServers","keys","Promise","all","key","history","entries","sort","b","slice","Col","Grid","popularServers","ServerList","localServers","setLocalServers","useCallback","item","then","useEffect","grow","justify","sm","xs","MotD","motd","motdHtml","setMotdHtml","motdparser","toHtml","_","res","trim","dangerouslySetInnerHTML","__html","Online","online","color","PlayerCount","players","max","PlayerItem","player","id","uuid","setUuid","fetch","json","response","catch","err","console","error","direction","sx","Avatar","src","Skeleton","width","lineClamp","PlayerList","playerMap","Map","list","forEach","p","set","undefined","sample","playerList","Array","from","localeCompare","Divider","my","labelProps","SimpleGrid","cols","breakpoints","maxWidth","defaultAvatarSrc","process","ServerAvatar","favicon","Image","margin","alt","radius","Version","tags","split","t","Badge","spacing","Accordion","Details","data","align","offsetIcon","block","JSON","stringify","Error","message","Loading","Loader","mergePositive","lhs","rhs","result","Object","assign","current","value","isArray","ServerStatus","props","state","statusLoaded","queryLoaded","this","address","toMerge","status","merged","setState","statusError","queryError","errorMsg","filter","e","join","React","Component","WithTheme","render","preferredColorScheme","useColorScheme","useLocalStorageValue","defaultValue","colorScheme","setColorScheme","toggleColorScheme","ThemeToggle","ActionIcon","ColorSchemeProvider","MantineProvider","theme","withGlobalStyles","withNormalizeCSS","App","params","URLSearchParams","search","paramIp","get","form","useForm","initialValues","ip","submitCallback","values","toString","AppShell","styles","root","backgroundImage","minHeight","header","Header","gradient","to","deg","Paper","onSubmit","TextInput","required","placeholder","getInputProps","Space","h","fullWidth","type","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6d1ddcb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"@mantine/core\";\r\n\r\ntype ModalScreenProps = {\r\n  title: string;\r\n};\r\n\r\nexport const ModalScreen: React.FC<ModalScreenProps> = ({\r\n  title,\r\n  children,\r\n}) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={showModal} variant=\"subtle\">\r\n        {title}\r\n      </Button>\r\n      <Modal\r\n        title={title}\r\n        opened={isModalVisible}\r\n        onClose={closeModal}\r\n        size=\"lg\"\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Center,\r\n    Code,\r\n    List,\r\n    Text as T,\r\n    Title\r\n} from \"@mantine/core\";\r\nimport { ModalScreen } from \"./modal-screen\";\r\n\r\nconst { Item } = List;\r\n\r\nconst About = () => (\r\n  <>\r\n    <p>\r\n      This site is an ad-free, lightweight way to check the status of your\r\n      favourite Minecraft server.\r\n    </p>\r\n    <p>Currently, the site only supports Java servers.</p>\r\n    <p>\r\n      This site is basically always under development, as I use it for a\r\n      platform for learning web development. If there are any questions,\r\n      suggestions, feedback or bugs, you can raise an{\" \"}\r\n      <T\r\n        variant=\"link\"\r\n        component=\"a\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://github.com/Samuel-Lewis/mc-status/issues\"\r\n      >\r\n        issue on the GitHub repo\r\n      </T>\r\n      .\r\n    </p>\r\n\r\n    <p>Created using</p>\r\n    <List>\r\n      <Item>\r\n        API queries by{\" \"}\r\n        <T\r\n          variant=\"link\"\r\n          component=\"a\"\r\n          href=\"https://mcapi.us/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          MC API\r\n        </T>\r\n      </Item>\r\n      <Item>\r\n        Player information by{\" \"}\r\n        <T\r\n          variant=\"link\"\r\n          component=\"a\"\r\n          href=\"https://api.minetools.eu/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          MineTools\r\n        </T>{\" \"}\r\n        and{\" \"}\r\n        <T\r\n          variant=\"link\"\r\n          component=\"a\"\r\n          href=\"https://namemc.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          NameMC\r\n        </T>\r\n      </Item>\r\n      <Item>\r\n        Avatars by{\" \"}\r\n        <T\r\n          variant=\"link\"\r\n          component=\"a\"\r\n          href=\"https://crafatar.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Crafatar\r\n        </T>\r\n      </Item>\r\n      <Item>\r\n        <T\r\n          variant=\"link\"\r\n          component=\"a\"\r\n          href=\"https://reactjs.org/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          React\r\n        </T>{\" \"}\r\n        and{\" \"}\r\n        <T\r\n          variant=\"link\"\r\n          component=\"a\"\r\n          href=\"https://mantine.dev/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Mantine\r\n        </T>\r\n      </Item>\r\n    </List>\r\n  </>\r\n);\r\n\r\nconst FAQ = () => (\r\n  <>\r\n    <Title order={5}>Why is my server not showing up?</Title>\r\n    <p>There are a few reasons your server may not be showing up</p>\r\n    <List>\r\n      <Item>The server maybe offline</Item>\r\n      <Item>\r\n        The server <Code>enable-status</Code> may be set to <Code>false</Code>\r\n      </Item>\r\n      <Item>\r\n        There is a bug in my code 😞. You can raise an{\" \"}\r\n        <T\r\n          variant=\"link\"\r\n          component=\"a\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/Samuel-Lewis/mc-status/issues\"\r\n        >\r\n          issue on the GitHub repo\r\n        </T>\r\n        .\r\n      </Item>\r\n    </List>\r\n    <Title order={5}>\r\n      How come some servers show more details than others?\r\n    </Title>\r\n    <p>\r\n      Ultimately, servers can show as much or as little as they want. If you\r\n      want to show more detailed information on your server, set{\" \"}\r\n      <Code>enable-status</Code> and <Code>enable-query</Code> to{\" \"}\r\n      <Code>true</Code> in your <Code>server.properties</Code>. Remember though,\r\n      this is information shared to the public. Check that there is nothing\r\n      unintentional being exposed or that you have measures to protect your\r\n      server if needed.\r\n    </p>\r\n    <Title order={5}>\r\n      Why do some player lists look weird, incomplete, or empty?\r\n    </Title>\r\n    <p>\r\n      As above, servers can show what they like. Some servers take the\r\n      opportunity to show ads, extra server information, a subset of players, or\r\n      maybe, no players at all. As of Minecraft 1.18, players are able to\r\n      opt-out of server queries, and hence will not be shown in the player list.\r\n    </p>\r\n    <Title order={5}>How do I donate or contribute?</Title>\r\n\r\n    <p>\r\n      This website costs me zero dollars per year to run as it relies on\r\n      existing free services. While it's a kind notion, you hang on to it for a\r\n      rainy day 😉. If you really want to contribute, the code is open-source on{\" \"}\r\n      <T\r\n        variant=\"link\"\r\n        component=\"a\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://github.com/Samuel-Lewis/mc-status\"\r\n      >\r\n        GitHub\r\n      </T>\r\n      .\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport const InfoLinks: React.FC = () => {\r\n  return (\r\n    <Center style={{ padding: \"8px\" }}>\r\n      <ModalScreen title={\"About\"}>\r\n        <About />\r\n      </ModalScreen>\r\n      <ModalScreen title={\"FAQ\"}>\r\n        <FAQ />\r\n      </ModalScreen>\r\n    </Center>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Box,\r\n    Card,\r\n    CloseButton,\r\n    Group,\r\n    Text as T,\r\n    Title,\r\n    Tooltip\r\n} from \"@mantine/core\";\r\nimport { SearchEntry } from \"./types\";\r\n\r\nexport type DetailedListProps = {\r\n  servers: SearchEntry[];\r\n  title: string;\r\n  onDelete?: (server: SearchEntry) => void;\r\n};\r\n\r\nexport const DetailedList: React.FC<DetailedListProps> = ({\r\n  servers,\r\n  title,\r\n  onDelete,\r\n}) => {\r\n  if (servers.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const toParam = (url: string) => {\r\n    const fullUrl = new URL(window.location.href);\r\n    fullUrl.searchParams.append(\"ip\", url);\r\n    return fullUrl.href;\r\n  };\r\n\r\n  const items = servers.map((server) => {\r\n    const del = (\r\n      <Box style={{ height: \"28px\" }}>\r\n        {onDelete ? (\r\n          <Tooltip label=\"Remove server\">\r\n            <CloseButton onClick={() => onDelete(server)} />\r\n          </Tooltip>\r\n        ) : null}\r\n      </Box>\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        key={server.url}\r\n        padding=\"lg\"\r\n        component=\"a\"\r\n        href={toParam(server.url)}\r\n      >\r\n        <Group position=\"apart\">\r\n          <T weight={500}>{server.url}</T>\r\n          {del}\r\n        </Group>\r\n        <T size=\"sm\">{server.name}</T>\r\n      </Card>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Title order={3}>{title}</Title>\r\n      {items}\r\n    </>\r\n  );\r\n};\r\n","import localforage from \"localforage\";\r\nimport {\r\n    isSearchEntry,\r\n    SearchEntry\r\n} from \"./types\";\r\n\r\nconst searchStore = localforage.createInstance({\r\n  name: \"server-searches\",\r\n});\r\n\r\nexport const addSearch = async ({ name, url }: SearchEntry) => {\r\n  const entry = await localforage.getItem(url);\r\n\r\n  if (entry === null || !isSearchEntry(entry)) {\r\n    return await searchStore.setItem(url, {\r\n      name,\r\n      url,\r\n      lastAccess: Date.now(),\r\n      totalHits: 1,\r\n    });\r\n  }\r\n\r\n  const newEntry = {\r\n    ...entry,\r\n    totalHits: (entry.totalHits || 0) + 1,\r\n    lastAccess: Date.now(),\r\n    name,\r\n  };\r\n  return await searchStore.setItem(url, newEntry);\r\n};\r\n\r\nexport const removeSearch = async (url: string) => {\r\n  return await searchStore.removeItem(url);\r\n};\r\n\r\nconst sortSearches = (searches: SearchEntry[]): SearchEntry[] => {\r\n  return searches\r\n    .sort((a, b) => {\r\n      if (a.totalHits === b.totalHits) {\r\n        return 0;\r\n      }\r\n      return (a.totalHits || 0) < (b.totalHits || 0) ? 1 : -1;\r\n    })\r\n    .slice(0, 4);\r\n};\r\n\r\nexport const getLocalServers = async (): Promise<SearchEntry[]> => {\r\n  const keys = await searchStore.keys();\r\n  const entries = await Promise.all(\r\n    keys.map(async (key) => {\r\n      const history = await searchStore.getItem(key);\r\n      return history as SearchEntry;\r\n    })\r\n  );\r\n  return sortSearches(entries);\r\n};\r\n","export type SearchEntry = {\r\n  name: string;\r\n  url: string;\r\n  lastAccess?: number;\r\n  totalHits?: number;\r\n};\r\n\r\nexport function isSearchEntry(obj: any): obj is SearchEntry {\r\n  return (\r\n    obj &&\r\n    typeof obj === \"object\" &&\r\n    typeof obj.name === \"string\" &&\r\n    typeof obj.url === \"string\" &&\r\n    (typeof obj.lastAccess === \"undefined\" ||\r\n      typeof obj.lastAccess === \"number\") &&\r\n    (typeof obj.totalHits === \"undefined\" || typeof obj.totalHits === \"number\")\r\n  );\r\n}\r\n","import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport { Grid } from \"@mantine/core\";\r\nimport { DetailedList } from \"./detailed-list\";\r\nimport {\r\n    getLocalServers,\r\n    removeSearch\r\n} from \"./local-servers\";\r\nimport { SearchEntry } from \"./types\";\r\n\r\nconst { Col } = Grid;\r\n\r\nconst popularServers = [\r\n  { name: \"Hypixel\", url: \"mc.hypixel.net\" },\r\n  { name: \"2b2t\", url: \"2b2t.org\" },\r\n  { name: \"Mineplex (US)\", url: \"us.mineplex.com\" },\r\n  { name: \"MineTower\", url: \"minetower.serv.gs\" },\r\n];\r\n\r\nexport const ServerList = () => {\r\n  const [localServers, setLocalServers] = useState<SearchEntry[]>([]);\r\n  const onDelete = useCallback(\r\n    (item: SearchEntry) => {\r\n      removeSearch(item.url).then(() => {\r\n        getLocalServers().then((servers) => setLocalServers(servers));\r\n      });\r\n    },\r\n    [setLocalServers]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getLocalServers().then((servers) => setLocalServers(servers));\r\n  }, [setLocalServers]);\r\n\r\n  return (\r\n    <Grid grow justify=\"center\">\r\n      <Col sm={6} xs={12}>\r\n        <DetailedList title=\"Popular servers\" servers={popularServers} />\r\n      </Col>\r\n      <Col sm={6} xs={12}>\r\n        <DetailedList\r\n          title=\"Recent servers\"\r\n          servers={localServers}\r\n          onDelete={onDelete}\r\n        />\r\n      </Col>\r\n    </Grid>\r\n  );\r\n};\r\n","import motdparser from \"mcmotdparser\";\nimport React, {\n    useEffect,\n    useState\n} from \"react\";\nimport { Payload } from \"../types\";\n\ntype MotdProps = {\n  motd: Payload[\"motd\"];\n};\n\nexport const MotD: React.FC<MotdProps> = ({ motd }) => {\n  const [motdHtml, setMotdHtml] = useState(\"\");\n  useEffect(() => {\n    motdparser.toHtml(motd, (_: any, res: any) => setMotdHtml(res));\n  }, [motd]);\n\n  if (!motd?.trim()) {\n    return null;\n  }\n\n  return <div dangerouslySetInnerHTML={{ __html: motdHtml }}></div>;\n};\n","import React from \"react\";\nimport {\n    AiFillCheckCircle,\n    AiFillCloseCircle\n} from \"react-icons/ai\";\nimport { Title } from \"@mantine/core\";\nimport { Payload } from \"../types\";\n\ntype OnlineProps = {\n  online: Payload[\"online\"];\n};\n\nexport const Online: React.FC<OnlineProps> = ({ online }) => {\n  if (!!online) {\n    return (\n      <Title order={3}>\n        <AiFillCheckCircle style={{ color: \"green\" }} /> Online!\n      </Title>\n    );\n  }\n\n  return (\n    <Title order={3}>\n      <AiFillCloseCircle style={{ color: \"darkred\" }} /> Offline\n    </Title>\n  );\n};\n","import React from \"react\";\nimport { AiOutlineTeam } from \"react-icons/ai\";\nimport { Text as T } from \"@mantine/core\";\nimport { Payload } from \"../types\";\n\ntype PlayerCountProps = {\n  players: Payload[\"players\"];\n};\n\nexport const PlayerCount: React.FC<PlayerCountProps> = ({ players }) => {\n  if (!players) {\n    return null;\n  }\n\n  const { now, max } = players;\n  return (\n    <T>\n      <AiOutlineTeam /> {now} / {max} player{now === 1 ? \"\" : \"s\"} online\n    </T>\n  );\n};\n","import React, {\n    useEffect,\n    useState\n} from \"react\";\nimport {\n    Avatar,\n    Group,\n    Skeleton,\n    Text as T\n} from \"@mantine/core\";\nimport { Player } from \"../types\";\n\ntype PlayerItemProps = {\n  player: Player;\n};\n\nexport const PlayerItem: React.FC<PlayerItemProps> = ({ player }) => {\n  const { name, id } = player;\n\n  const [uuid, setUuid] = useState(id);\n  useEffect(() => {\n    if (!name || uuid) {\n      return;\n    }\n\n    fetch(`https://api.minetools.eu/uuid/${name}`)\n      .then((res) => res.json())\n      .then((response) => {\n        setUuid(response.id);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [name, uuid, id]);\n\n  return (\n    <Group direction=\"row\" sx={{ height: \"60px\" }}>\n      {uuid ? (\n        <Avatar src={`https://crafatar.com/renders/head/${uuid}?overlay`} />\n      ) : (\n        <Skeleton height={38} width={38} />\n      )}\n      <T\n        lineClamp={1}\n        component=\"a\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={`https://namemc.com/profile/${name}`}\n      >\n        {name}\n      </T>\n    </Group>\n  );\n};\n","import React from \"react\";\nimport {\n    Divider,\n    SimpleGrid\n} from \"@mantine/core\";\nimport { Payload } from \"../types\";\nimport { PlayerItem } from \"./player-item\";\n\ntype PlayerListProps = {\n  players: Payload[\"players\"];\n};\n\nexport const PlayerList: React.FC<PlayerListProps> = ({ players }) => {\n  if (!players) {\n    return null;\n  }\n  const playerMap = new Map<string, string | undefined>();\n  players?.list?.forEach((p) => playerMap.set(p, undefined));\n  players?.sample?.forEach((p) => playerMap.set(p.name!, p.id!));\n\n  if (playerMap.size === 0) {\n    return null;\n  }\n\n  const playerList = Array.from(playerMap)\n    .sort((a, b) => a[0].localeCompare(b[0]))\n    .map(([name, id]) => {\n      return <PlayerItem key={`${name}`} player={{ name, id }} />;\n    });\n\n  return (\n    <>\n      <Divider my=\"lg\" label=\"Player List\" labelProps={{ size: \"md\" }} />\n\n      <SimpleGrid\n        cols={3}\n        breakpoints={[\n          { maxWidth: \"sm\", cols: 2 },\n          { maxWidth: \"xs\", cols: 1 },\n        ]}\n      >\n        {playerList}\n      </SimpleGrid>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Image } from \"@mantine/core\";\nimport { Payload } from \"../types\";\n\ntype ServerAvatarProps = {\n  favicon: Payload[\"favicon\"];\n};\n\nconst defaultAvatarSrc = `${process.env.PUBLIC_URL}/grassblock.jpg`;\n\nexport const ServerAvatar: React.FC<ServerAvatarProps> = ({ favicon }) => {\n  return (\n    <Image\n      src={favicon ?? defaultAvatarSrc}\n      style={{ margin: \"auto\" }}\n      alt=\"\"\n      radius=\"md\"\n      width={128}\n    />\n  );\n};\n","import React from \"react\";\nimport {\n    Badge,\n    Group\n} from \"@mantine/core\";\nimport { Payload } from \"../types\";\n\ntype VersionProps = {\n  server: Payload[\"server\"];\n};\n\nexport const Version: React.FC<VersionProps> = ({ server }) => {\n  if (!server || !server?.name) {\n    return null;\n  }\n\n  const tags = server.name\n    .split(/[\\s-,]+/)\n    .map((t) => <Badge key={t}>{t}</Badge>);\n\n  return <Group spacing=\"xs\">{tags}</Group>;\n};\n","import React from \"react\";\nimport { Accordion, Center, Code, Divider, Grid } from \"@mantine/core\";\nimport { MotD } from \"./components/motd\";\nimport { Online } from \"./components/online\";\nimport { PlayerCount } from \"./components/player-count\";\nimport { PlayerList } from \"./components/player-list\";\nimport { ServerAvatar } from \"./components/server-avatar\";\nimport { Version } from \"./components/version\";\nimport { Payload } from \"./types\";\n\nconst { Item } = Accordion;\nconst { Col } = Grid;\n\ntype DetailsProps = {\n  data: Payload;\n};\n\nconst Details: React.FC<DetailsProps> = ({ data }) => {\n  return (\n    <>\n      <Grid align=\"center\">\n        <Col xs={12} sm={4}>\n          <Center>\n            <ServerAvatar favicon={data.favicon} />\n          </Center>\n        </Col>\n        <Col xs={12} sm={8}>\n          <Online online={data.online} />\n          <PlayerCount players={data.players} />\n          <Version server={data.server} />\n          <MotD motd={data.motd} />\n        </Col>\n      </Grid>\n\n      <PlayerList players={data.players} />\n\n      <Divider my=\"lg\" />\n\n      <Accordion offsetIcon={false}>\n        <Item label=\"Raw data\">\n          <Code block>{JSON.stringify(data, null, 2)}</Code>\n        </Item>\n      </Accordion>\n    </>\n  );\n};\n\nexport default Details;\n","import React from \"react\";\nimport {\n    Center,\n    Code,\n    Group,\n    Text as T,\n    Title\n} from \"@mantine/core\";\n\nexport type ErrorProps = {\n  message?: string;\n};\n\nexport const Error: React.FC<ErrorProps> = ({ message }) => (\n  <Center>\n    <Group position=\"center\" direction=\"column\" grow>\n      <Title order={2}>Failed to fetch server details</Title>\n      <T>Please check the server address and try again.</T>\n      {message && <Code block>{message}</Code>}\n    </Group>\n  </Center>\n);\n","import React from \"react\";\nimport {\n    Group,\n    Loader,\n    Title\n} from \"@mantine/core\";\n\nexport default function Loading() {\n  return (\n    <Group direction=\"column\" position=\"center\">\n      <Title order={2}>Loading</Title>\n      <Loader size=\"lg\" />\n    </Group>\n  );\n}\n","import React from \"react\";\nimport { addSearch } from \"../server-list/local-servers\";\nimport Details from \"./details\";\nimport { Error } from \"./error\";\nimport Loading from \"./loading\";\nimport { Payload } from \"./types\";\n\nexport type ServerProps = {\n  address: string;\n};\n\nexport type ServerState = {\n  statusLoaded: boolean;\n  queryLoaded: boolean;\n  statusError?: Error;\n  queryError?: Error;\n  data?: Payload;\n};\n\nconst isObject = (item: any) => {\n  return item && typeof item === \"object\" && !Array.isArray(item);\n};\n\nconst mergePositive = (lhs: any, rhs: any) => {\n  const result = Object.assign({}, lhs);\n\n  Object.keys(rhs).forEach((key) => {\n    const current = result[key];\n    const value = rhs[key];\n\n    if (isObject(value)) {\n      result[key] = mergePositive(current, value);\n      return;\n    }\n\n    if (!current) {\n      result[key] = value;\n      return;\n    }\n  });\n\n  return result;\n};\n\nexport class ServerStatus extends React.Component<ServerProps, ServerState> {\n  constructor(props: ServerProps) {\n    super(props);\n    this.state = { statusLoaded: false, queryLoaded: false };\n  }\n\n  componentDidMount() {\n    fetch(`https://mcapi.us/server/status?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const toMerge = data?.status === \"success\" ? data : {};\n        const merged = mergePositive(this.state.data, toMerge);\n        this.setState({ data: merged, statusLoaded: true });\n      })\n      .catch((error) => {\n        this.setState({ statusError: error, statusLoaded: true });\n        console.error(error);\n      });\n\n    fetch(`https://mcapi.us/server/query?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const toMerge = data?.status === \"success\" ? data : {};\n        const merged = mergePositive(this.state.data, toMerge);\n        this.setState({ data: merged, queryLoaded: true });\n      })\n      .catch((error) => {\n        this.setState({ queryError: error });\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { statusError, queryError, data, statusLoaded, queryLoaded } =\n      this.state;\n\n    if (!statusLoaded && !queryLoaded) {\n      return <Loading />;\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      if (statusLoaded && queryLoaded) {\n        const errorMsg = [statusError, queryError].filter((e) => e).join(\"/\");\n        return <Error message={errorMsg} />;\n      } else {\n        return <Loading />;\n      }\n    }\n\n    if (data.error || data.status === \"error\") {\n      if (statusLoaded && queryLoaded) {\n        return <Error message={data ? data.error : \"No data found??\"} />;\n      }\n    }\n\n    addSearch({\n      name: data.server?.name || \"Unnamed server\",\n      url: this.props.address,\n    });\n\n    return <Details data={data} key={JSON.stringify(data)} />;\n  }\n}\n","import React from \"react\";\r\nimport {\r\n    FiMoon,\r\n    FiSun\r\n} from \"react-icons/fi\";\r\nimport {\r\n    ActionIcon,\r\n    ColorScheme,\r\n    ColorSchemeProvider,\r\n    MantineProvider,\r\n    Tooltip\r\n} from \"@mantine/core\";\r\nimport {\r\n    useColorScheme,\r\n    useLocalStorageValue\r\n} from \"@mantine/hooks\";\r\n\r\nexport type WithThemeProps = {\r\n  render: (\r\n    theme: ColorScheme,\r\n    ThemeToggle: React.ReactElement\r\n  ) => React.ReactNode;\r\n};\r\n\r\nexport const WithTheme: React.FC<WithThemeProps> = ({ render }) => {\r\n  const preferredColorScheme = useColorScheme();\r\n  const [colorScheme, setColorScheme] = useLocalStorageValue<ColorScheme>({\r\n    key: \"mantine-color-scheme\",\r\n    defaultValue: preferredColorScheme,\r\n  });\r\n\r\n  const toggleColorScheme = (value?: ColorScheme) => {\r\n    const v = value || (colorScheme === \"dark\" ? \"light\" : \"dark\");\r\n    setColorScheme(v);\r\n  };\r\n\r\n  const ThemeToggle = (\r\n    <Tooltip\r\n      label={`Switch to ${colorScheme === \"dark\" ? \"light\" : \"dark\"} mode`}\r\n      position=\"left\"\r\n    >\r\n      <ActionIcon onClick={() => toggleColorScheme()} size=\"lg\">\r\n        {colorScheme === \"dark\" ? <FiSun /> : <FiMoon />}\r\n      </ActionIcon>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <ColorSchemeProvider\r\n      colorScheme={colorScheme}\r\n      toggleColorScheme={toggleColorScheme}\r\n    >\r\n      <MantineProvider\r\n        theme={{ colorScheme }}\r\n        withGlobalStyles\r\n        withNormalizeCSS\r\n      >\r\n        {render(colorScheme, ThemeToggle)}\r\n      </MantineProvider>\r\n    </ColorSchemeProvider>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport {\n  AppShell,\n  Button,\n  Center,\n  Divider,\n  Group,\n  Header,\n  Image,\n  MantineProvider,\n  Paper,\n  Space,\n  Text as T,\n  TextInput,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/hooks\";\nimport { InfoLinks } from \"./info-links\";\nimport { ServerList } from \"./server-list\";\nimport { ServerStatus } from \"./server-state\";\nimport { WithTheme } from \"./theme\";\n\nfunction App() {\n  const params = new URLSearchParams(window.location.search);\n  const paramIp = params.get(\"ip\");\n\n  const form = useForm<{ ip: string }>({\n    initialValues: {\n      ip: paramIp ?? \"\",\n    },\n  });\n\n  const submitCallback = (values: typeof form[\"values\"]) => {\n    if (values.ip) {\n      params.set(\"ip\", values.ip);\n      window.location.search = params.toString();\n    }\n  };\n\n  return (\n    <WithTheme\n      render={(_, ThemeToggle) => (\n        <AppShell\n          padding=\"md\"\n          styles={(_) => ({\n            root: {\n              backgroundImage: `url(${process.env.PUBLIC_URL}/assets/bright-squares.png)`,\n              height: \"100%\",\n              minHeight: \"100vh\",\n            },\n          })}\n          header={\n            <MantineProvider theme={{ colorScheme: \"dark\" }}>\n              <Header height={60} padding=\"xs\">\n                <Group position=\"apart\">\n                  {/* Navigation Items */}\n\n                  <Group spacing=\"xs\">\n                    {/* Logo */}\n                    <Image\n                      sx={{ height: \"38px\", width: \"38px\" }}\n                      src={`${process.env.PUBLIC_URL}/logo512.png`}\n                    />\n                    <T\n                      component=\"a\"\n                      href={process.env.PUBLIC_URL}\n                      variant=\"gradient\"\n                      size=\"xl\"\n                      weight={700}\n                      gradient={{ from: \"indigo\", to: \"cyan\", deg: 45 }}\n                    >\n                      Minecraft Server Status\n                    </T>\n                  </Group>\n\n                  {/* Theme toggle */}\n                  {ThemeToggle}\n                </Group>\n              </Header>\n            </MantineProvider>\n          }\n        >\n          <Paper padding=\"xl\">\n            <Group position=\"center\" direction=\"column\" grow>\n              <form onSubmit={form.onSubmit(submitCallback)}>\n                <TextInput\n                  required\n                  size=\"lg\"\n                  label=\"Server IP\"\n                  placeholder=\"mc.hypixel.net\"\n                  {...form.getInputProps(\"ip\")}\n                />\n                <Space h=\"xl\" />\n                <Center>\n                  <Button fullWidth type=\"submit\" style={{ maxWidth: 300 }}>\n                    Go!\n                  </Button>\n                </Center>\n              </form>\n            </Group>\n            <InfoLinks />\n            <Divider my=\"lg\" />\n            {!paramIp && <ServerList />}\n            {paramIp && <ServerStatus key={paramIp} address={paramIp} />}\n          </Paper>\n\n          <Center style={{ height: \"60px\" }}>\n            <T>\n              Created by{\" \"}\n              <T\n                component=\"a\"\n                variant=\"link\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://samuel-lewis.com\"\n              >\n                Samuel Lewis\n              </T>\n            </T>\n          </Center>\n        </AppShell>\n      )}\n    />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}