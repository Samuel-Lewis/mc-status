{"version":3,"sources":["server-state/loading.tsx","server-state/error.tsx","server-state/components/server-avatar.tsx","server-state/components/online.tsx","server-state/components/player-count.tsx","server-state/components/player-item.tsx","server-state/components/player-list.tsx","server-state/server.tsx","app.tsx","index.tsx"],"names":["Loading","style","textAlign","size","Error","props","status","title","subTitle","message","defaultAvatarSrc","process","ServerAvatar","src","shape","Online","Title","level","CheckCircleFilled","color","CloseCircleFilled","PlayerCount","data","now","max","Text","strong","TeamOutlined","PlayerItem","useState","uuid","setUuid","useEffect","name","fetch","then","res","json","response","console","log","id","catch","err","error","Item","Meta","avatar","href","target","rel","PlayerList","list","length","orientation","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","mergePositive","lhs","rhs","result","Object","assign","keys","forEach","key","current","value","Array","isArray","ServerStatus","state","loading","this","address","merged","setState","flex","favicon","online","players","span","ghost","Panel","header","JSON","stringify","React","Component","Header","Layout","Footer","Content","App","params","URLSearchParams","window","location","search","paramIp","get","className","layout","initialValues","ip","onFinish","values","set","toString","label","type","htmlType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1c3cd97.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spin } from \"antd\";\n\nexport default function Loading() {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2>Loading</h2>\n      <Spin size=\"large\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Result } from \"antd\";\n\nexport type ErrorProps = {\n  message?: string;\n};\n\nexport default function Error(props: ErrorProps) {\n  return (\n    <Result\n      status=\"error\"\n      title=\"Failed to fetch server details\"\n      subTitle={props.message}\n    />\n  );\n}\n","import React from \"react\";\nimport { Avatar } from \"antd\";\n\nconst defaultAvatarSrc = `${process.env.PUBLIC_URL}/grassblock.jpg`;\n\nexport const ServerAvatar = (props: { src?: string }) => {\n  return (\n    <Avatar src={props.src || defaultAvatarSrc} size={128} shape=\"square\" />\n  );\n};\n","import React from \"react\";\n\nimport { Typography } from \"antd\";\nimport { CheckCircleFilled, CloseCircleFilled } from \"@ant-design/icons\";\n\nexport const Online = (props: { status?: boolean }) => {\n  if (!!props.status) {\n    return (\n      <Typography.Title level={3}>\n        <CheckCircleFilled style={{ color: \"green\" }} /> Online!\n      </Typography.Title>\n    );\n  }\n\n  return (\n    <Typography.Title level={3}>\n      <CloseCircleFilled style={{ color: \"darkred\" }} /> Offline\n    </Typography.Title>\n  );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { TeamOutlined } from \"@ant-design/icons\";\n\nexport const PlayerCount = (props: {\n  data?: { now?: number; max?: number };\n}) => {\n  if (!props.data) {\n    return null;\n  }\n\n  const { now, max } = props.data;\n  return (\n    <Typography.Text strong>\n      <TeamOutlined /> {now} / {max} player{now === 1 ? \"\" : \"s\"} online\n    </Typography.Text>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { List, Avatar } from \"antd\";\n\nexport const PlayerItem = (props: { name: string }) => {\n  const [uuid, setUuid] = useState(\"\");\n  useEffect(() => {\n    const { name } = props;\n    if (!name) {\n      return;\n    }\n\n    fetch(`https://api.minetools.eu/uuid/${name}`)\n      .then((res) => res.json())\n      .then((response) => {\n        console.log({ response });\n        setUuid(response.id);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [props]);\n\n  return (\n    <List.Item.Meta\n      avatar={\n        <Avatar\n          shape=\"square\"\n          size=\"large\"\n          src={`https://crafatar.com/renders/head/${uuid}?overlay`}\n        />\n      }\n      title={\n        <a\n          href={`https://namemc.com/profile/${props.name}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {props.name}\n        </a>\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { Divider, List } from \"antd\";\nimport { PlayerItem } from \"./player-item\";\n\nexport const PlayerList = (props: { data?: { list?: string[] } }) => {\n  if (!props.data || !props.data.list || props.data.list.length === 0) {\n    return null;\n  }\n\n  const list = props.data.list;\n  return (\n    <>\n      <Divider orientation=\"left\">Player List</Divider>\n      <List\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 4,\n          xxl: 5,\n        }}\n        dataSource={list}\n        size=\"large\"\n        renderItem={(item) => (\n          <List.Item>\n            <PlayerItem name={item} />\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Collapse, Row, Col, Divider } from \"antd\";\n\nimport Loading from \"./loading\";\nimport Error from \"./error\";\n\nimport { ServerAvatar } from \"./components/server-avatar\";\nimport { Online } from \"./components/online\";\nimport { PlayerCount } from \"./components/player-count\";\nimport { PlayerList } from \"./components/player-list\";\n\nexport type Payload = {\n  status?: string;\n  online?: boolean;\n  error?: string;\n  motd?: string;\n  favicon?: string;\n  version?: string;\n  game_type?: string;\n  game_id?: any;\n  server_mod?: string;\n  map?: any;\n  players?: {\n    max?: number;\n    now?: number;\n    list?: any[];\n  };\n  plugins?: any[];\n  last_online?: string;\n  last_updated?: string;\n  duration?: number;\n};\n\nexport type ServerProps = {\n  address: string;\n};\n\nexport type ServerState = {\n  loading: boolean;\n  data?: Payload;\n  error?: Error;\n};\n\nconst isObject = (item: any) => {\n  return item && typeof item === \"object\" && !Array.isArray(item);\n};\n\nconst mergePositive = (lhs: any, rhs: any) => {\n  const result = Object.assign({}, lhs);\n\n  Object.keys(rhs).forEach((key) => {\n    const current = result[key];\n    const value = rhs[key];\n\n    if (isObject(value)) {\n      result[key] = mergePositive(current, value);\n      return;\n    }\n\n    if (!current) {\n      result[key] = value;\n      return;\n    }\n  });\n\n  return result;\n};\n\nexport class ServerStatus extends React.Component<ServerProps, ServerState> {\n  constructor(props: ServerProps) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  componentDidMount() {\n    fetch(`https://mcapi.us/server/status?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const merged = mergePositive(this.state.data, data);\n        this.setState({ data: merged, loading: false });\n      })\n      .catch((error) => {\n        this.setState({ error, loading: false });\n        console.error(error);\n      });\n\n    fetch(`https://mcapi.us/server/query?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const merged = mergePositive(this.state.data, data);\n        this.setState({ data: merged });\n      })\n      .catch((error) => {\n        this.setState({ error, loading: false });\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { loading, data, error } = this.state;\n    if (error) {\n      return <Error message={error.message} />;\n    }\n\n    if (loading) {\n      return <Loading />;\n    }\n\n    if (!data || data.error || data.status === \"error\") {\n      return <Error message={data ? data.error : \"No data found??\"} />;\n    }\n\n    return (\n      <>\n        <Row gutter={[16, 16]}>\n          <Col flex=\"128px\">\n            <ServerAvatar src={data.favicon} />\n          </Col>\n          <Col style={{ textAlign: \"initial\" }}>\n            <Online status={data.online} />\n            <PlayerCount data={data.players} />\n          </Col>\n        </Row>\n\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <PlayerList data={data.players} />\n          </Col>\n        </Row>\n\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Divider />\n            <Collapse ghost style={{ textAlign: \"initial\" }}>\n              <Collapse.Panel header=\"Raw Data\" key=\"1\">\n                <pre>{JSON.stringify(data, null, 2)}</pre>\n              </Collapse.Panel>\n            </Collapse>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { ServerStatus } from \"./server-state/server\";\nimport { Typography, Button, Layout, Form, Input, Divider } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  const params = new URLSearchParams(window.location.search);\n  const paramIp = params.get(\"ip\");\n\n  const onFinish = (values: { ip?: string }) => {\n    if (values.ip) {\n      params.set(\"ip\", values.ip);\n      window.location.search = params.toString();\n    }\n  };\n\n  return (\n    <Layout className=\"layout\">\n      <Header className=\"layout-header\">\n        <Typography.Title>Minecraft Server Status</Typography.Title>\n      </Header>\n      <Content className=\"layout-content\">\n        <Form\n          style={{ textAlign: \"center\" }}\n          name=\"basic\"\n          layout=\"vertical\"\n          size=\"large\"\n          initialValues={{ ip: paramIp }}\n          onFinish={onFinish}\n        >\n          <Form.Item label=\"Server IP:\" name=\"ip\">\n            <Input />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Go!\n            </Button>\n          </Form.Item>\n        </Form>\n        <Divider />\n        {paramIp && <ServerStatus key={paramIp} address={paramIp} />}\n      </Content>\n      <Footer className=\"layout-footer\">\n        Created by <a href=\"https://github.com/Samuel-Lewis\">Samuel Lewis</a> |{\" \"}\n        Avatars by <a href=\"https://crafatar.com\">Crafatar</a>\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}