{"version":3,"sources":["server-state/loading.tsx","server-state/error.tsx","server-state/components/server-avatar.tsx","server-state/components/online.tsx","server-state/components/player-count.tsx","server-state/components/player-item.tsx","server-state/components/player-list.tsx","server-state/details.tsx","server-state/server.tsx","app.tsx","index.tsx"],"names":["Loading","style","textAlign","size","Error","props","status","title","subTitle","message","defaultAvatarSrc","process","ServerAvatar","src","shape","Online","Title","level","CheckCircleFilled","color","CloseCircleFilled","PlayerCount","data","now","max","Text","strong","TeamOutlined","PlayerItem","player","name","id","useState","uuid","setUuid","useEffect","fetch","then","res","json","response","console","log","catch","err","error","Item","Meta","avatar","href","target","rel","PlayerList","playerMap","Map","players","list","forEach","p","set","undefined","sample","InfoContent","width","InfoPopover","content","placement","QuestionCircleOutlined","orientation","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","Array","from","renderItem","Details","flex","favicon","online","span","ghost","Panel","header","key","JSON","stringify","mergePositive","lhs","rhs","result","Object","assign","keys","item","current","value","isArray","ServerStatus","state","statusLoaded","queryLoaded","this","address","toMerge","merged","setState","statusError","queryError","length","errorMsg","filter","e","join","React","Component","Header","Layout","Footer","Content","App","params","URLSearchParams","window","location","search","paramIp","get","className","layout","initialValues","ip","onFinish","values","toString","label","type","htmlType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.991a4807.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spin } from \"antd\";\n\nexport default function Loading() {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2>Loading</h2>\n      <Spin size=\"large\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Result } from \"antd\";\n\nexport type ErrorProps = {\n  message?: string;\n};\n\nexport default function Error(props: ErrorProps) {\n  return (\n    <Result\n      status=\"error\"\n      title=\"Failed to fetch server details\"\n      subTitle={props.message}\n    />\n  );\n}\n","import React from \"react\";\nimport { Avatar } from \"antd\";\n\nconst defaultAvatarSrc = `${process.env.PUBLIC_URL}/grassblock.jpg`;\n\nexport const ServerAvatar = (props: { src?: string }) => {\n  return (\n    <Avatar src={props.src || defaultAvatarSrc} size={128} shape=\"square\" />\n  );\n};\n","import React from \"react\";\n\nimport { Typography } from \"antd\";\nimport { CheckCircleFilled, CloseCircleFilled } from \"@ant-design/icons\";\n\nexport const Online = (props: { status?: boolean }) => {\n  if (!!props.status) {\n    return (\n      <Typography.Title level={3}>\n        <CheckCircleFilled style={{ color: \"green\" }} /> Online!\n      </Typography.Title>\n    );\n  }\n\n  return (\n    <Typography.Title level={3}>\n      <CloseCircleFilled style={{ color: \"darkred\" }} /> Offline\n    </Typography.Title>\n  );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { TeamOutlined } from \"@ant-design/icons\";\n\nexport const PlayerCount = (props: {\n  data?: { now?: number; max?: number };\n}) => {\n  if (!props.data) {\n    return null;\n  }\n\n  const { now, max } = props.data;\n  return (\n    <Typography.Text strong>\n      <TeamOutlined /> {now} / {max} player{now === 1 ? \"\" : \"s\"} online\n    </Typography.Text>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { List, Avatar } from \"antd\";\nimport { Player } from \"../types\";\n\ntype PlayerItemProps = {\n  player: Player;\n};\n\nexport const PlayerItem: React.FunctionComponent<PlayerItemProps> = ({\n  player,\n}) => {\n  const { name, id } = player;\n\n  const [uuid, setUuid] = useState(id);\n  useEffect(() => {\n    if (!name || uuid) {\n      console.log(\"UUID supplied\", { name, uuid });\n      return;\n    }\n\n    fetch(`https://api.minetools.eu/uuid/${name}`)\n      .then((res) => res.json())\n      .then((response) => {\n        console.log({ response });\n        setUuid(response.id);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [name, uuid]);\n\n  return (\n    <List.Item.Meta\n      avatar={\n        <Avatar\n          shape=\"square\"\n          size=\"large\"\n          src={`https://crafatar.com/renders/head/${uuid}?overlay`}\n        />\n      }\n      title={\n        <a\n          href={`https://namemc.com/profile/${name}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {name}\n        </a>\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { Divider, List, Popover } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\n\nimport { PlayerItem } from \"./player-item\";\nimport { Payload } from \"../types\";\n\nexport const PlayerList: React.FunctionComponent<{ data: Payload }> = ({\n  data,\n}) => {\n  const playerMap = new Map<string, string | undefined>();\n  data?.players?.list?.forEach((p) => playerMap.set(p, undefined));\n  data?.players?.sample?.forEach((p) => playerMap.set(p.name!, p.id!));\n\n  console.log(\"PLAYERMAP\", playerMap);\n  if (playerMap.size === 0) {\n    return null;\n  }\n\n  const InfoContent = (\n    <div style={{ width: \"300px\" }}>\n      <p>\n        Servers are able to control a \"sample\" of players online, and may use\n        this for extra metadata or advertisment.\n      </p>\n      <p>Ocassionaly, servers may also report nicknames.</p>\n    </div>\n  );\n  const InfoPopover = (\n    <Popover\n      content={InfoContent}\n      title={\"Why are there weird names sometimes?\"}\n      placement=\"topLeft\"\n    >\n      <QuestionCircleOutlined />\n    </Popover>\n  );\n\n  return (\n    <>\n      <Divider orientation=\"left\">Player List {InfoPopover}</Divider>\n      <List\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 4,\n          xxl: 5,\n        }}\n        dataSource={Array.from(playerMap)}\n        size=\"large\"\n        renderItem={([name, id]) => (\n          <List.Item>\n            <PlayerItem player={{ name, id }} />\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Collapse, Row, Col, Divider } from \"antd\";\nimport { ServerAvatar } from \"./components/server-avatar\";\nimport { Online } from \"./components/online\";\nimport { PlayerCount } from \"./components/player-count\";\nimport { PlayerList } from \"./components/player-list\";\nimport { Payload } from \"./types\";\n\ntype DetailsProps = {\n  data: Payload;\n};\n\nconst Details: React.FunctionComponent<DetailsProps> = ({ data }) => {\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col flex=\"128px\">\n          <ServerAvatar src={data.favicon} />\n        </Col>\n        <Col style={{ textAlign: \"initial\" }}>\n          <Online status={data.online} />\n          <PlayerCount data={data.players} />\n        </Col>\n      </Row>\n\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <PlayerList data={data} />\n        </Col>\n      </Row>\n\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Divider />\n          <Collapse ghost style={{ textAlign: \"initial\" }}>\n            <Collapse.Panel header=\"Raw Data\" key=\"1\">\n              <pre>{JSON.stringify(data, null, 2)}</pre>\n            </Collapse.Panel>\n          </Collapse>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Details;\n","import React from \"react\";\n\nimport Loading from \"./loading\";\nimport Error from \"./error\";\nimport Details from \"./details\";\nimport { Payload } from \"./types\";\n\nexport type ServerProps = {\n  address: string;\n};\n\nexport type ServerState = {\n  statusLoaded: boolean;\n  queryLoaded: boolean;\n  statusError?: Error;\n  queryError?: Error;\n  data?: Payload;\n};\n\nconst isObject = (item: any) => {\n  return item && typeof item === \"object\" && !Array.isArray(item);\n};\n\nconst mergePositive = (lhs: any, rhs: any) => {\n  const result = Object.assign({}, lhs);\n\n  Object.keys(rhs).forEach((key) => {\n    const current = result[key];\n    const value = rhs[key];\n\n    if (isObject(value)) {\n      result[key] = mergePositive(current, value);\n      return;\n    }\n\n    if (!current) {\n      result[key] = value;\n      return;\n    }\n  });\n\n  return result;\n};\n\nexport class ServerStatus extends React.Component<ServerProps, ServerState> {\n  constructor(props: ServerProps) {\n    super(props);\n    this.state = { statusLoaded: false, queryLoaded: false };\n  }\n\n  componentDidMount() {\n    fetch(`https://mcapi.us/server/status?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const toMerge = data?.status === \"success\" ? data : {};\n        const merged = mergePositive(this.state.data, toMerge);\n        this.setState({ data: merged, statusLoaded: true });\n      })\n      .catch((error) => {\n        this.setState({ statusError: error, statusLoaded: true });\n        console.error(error);\n      });\n\n    fetch(`https://mcapi.us/server/query?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const toMerge = data?.status === \"success\" ? data : {};\n        const merged = mergePositive(this.state.data, toMerge);\n        this.setState({ data: merged, queryLoaded: true });\n      })\n      .catch((error) => {\n        this.setState({ queryError: error });\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      statusError,\n      queryError,\n      data,\n      statusLoaded,\n      queryLoaded,\n    } = this.state;\n    if (!statusLoaded && !queryLoaded) {\n      return <Loading />;\n    }\n\n    if (!data || Object.keys(data).length === 0) {\n      const errorMsg = [statusError, queryError].filter((e) => e).join(\"/\");\n      return <Error message={errorMsg} />;\n    }\n\n    if (!data || data.error || data.status === \"error\") {\n      return <Error message={data ? data.error : \"No data found??\"} />;\n    }\n\n    return <Details data={data} key={JSON.stringify(data)} />;\n  }\n}\n","import React from \"react\";\nimport { ServerStatus } from \"./server-state/server\";\nimport { Typography, Button, Layout, Form, Input, Divider } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  const params = new URLSearchParams(window.location.search);\n  const paramIp = params.get(\"ip\");\n\n  const onFinish = (values: { ip?: string }) => {\n    if (values.ip) {\n      params.set(\"ip\", values.ip);\n      window.location.search = params.toString();\n    }\n  };\n\n  return (\n    <Layout className=\"layout\">\n      <Header className=\"layout-header\">\n        <Typography.Title>Minecraft Server Status</Typography.Title>\n      </Header>\n      <Content className=\"layout-content\">\n        <Form\n          style={{ textAlign: \"center\" }}\n          name=\"basic\"\n          layout=\"vertical\"\n          size=\"large\"\n          initialValues={{ ip: paramIp }}\n          onFinish={onFinish}\n        >\n          <Form.Item label=\"Server IP:\" name=\"ip\">\n            <Input />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Go!\n            </Button>\n          </Form.Item>\n        </Form>\n        <Divider />\n        {paramIp && <ServerStatus key={paramIp} address={paramIp} />}\n      </Content>\n      <Footer className=\"layout-footer\">\n        Created by <a href=\"https://github.com/Samuel-Lewis\">Samuel Lewis</a> |{\" \"}\n        Avatars by <a href=\"https://crafatar.com\">Crafatar</a>\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}