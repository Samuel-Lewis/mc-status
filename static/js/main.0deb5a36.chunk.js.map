{"version":3,"sources":["server-state/loading.tsx","server-state/error.tsx","server-state/components/server-avatar.tsx","server-state/components/online.tsx","server-state/components/player-count.tsx","server-state/components/player-item.tsx","server-state/components/player-list.tsx","server-state/server.tsx","app.tsx","index.tsx"],"names":["Loading","style","textAlign","size","Error","props","status","title","subTitle","message","defaultAvatarSrc","process","ServerAvatar","src","shape","Online","Title","level","CheckCircleFilled","color","CloseCircleFilled","PlayerCount","data","now","max","Text","strong","TeamOutlined","PlayerItem","useState","uuid","setUuid","name","useEffect","fetch","then","res","json","response","id","catch","err","console","error","Item","Meta","avatar","PlayerList","list","length","orientation","dataSource","renderItem","item","ServerStatus","state","loading","this","address","setState","online","gutter","flex","favicon","players","span","ghost","Panel","header","key","JSON","stringify","React","Component","Header","Layout","Footer","Content","App","params","URLSearchParams","window","location","search","paramIp","get","className","layout","initialValues","ip","onFinish","values","set","toString","label","type","htmlType","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0deb5a36.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spin } from \"antd\";\n\nexport default function Loading() {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2>Loading</h2>\n      <Spin size=\"large\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Result } from \"antd\";\n\nexport type ErrorProps = {\n  message?: string;\n};\n\nexport default function Error(props: ErrorProps) {\n  return (\n    <Result\n      status=\"error\"\n      title=\"Failed to fetch server details\"\n      subTitle={props.message}\n    />\n  );\n}\n","import React from \"react\";\nimport { Avatar } from \"antd\";\n\nconst defaultAvatarSrc = `${process.env.PUBLIC_URL}/grassblock.jpg`;\n\nexport const ServerAvatar = (props: { src?: string }) => {\n  return (\n    <Avatar src={props.src || defaultAvatarSrc} size={128} shape=\"square\" />\n  );\n};\n","import React from \"react\";\n\nimport { Typography } from \"antd\";\nimport { CheckCircleFilled, CloseCircleFilled } from \"@ant-design/icons\";\n\nexport const Online = (props: { status?: boolean }) => {\n  if (!!props.status) {\n    return (\n      <Typography.Title level={3}>\n        <CheckCircleFilled style={{ color: \"green\" }} /> Online!\n      </Typography.Title>\n    );\n  }\n\n  return (\n    <Typography.Title level={3}>\n      <CloseCircleFilled style={{ color: \"darkred\" }} /> Offline\n    </Typography.Title>\n  );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { TeamOutlined } from \"@ant-design/icons\";\n\nexport const PlayerCount = (props: {\n  data?: { now?: number; max?: number };\n}) => {\n  if (!props.data) {\n    return null;\n  }\n\n  const { now, max } = props.data;\n  return (\n    <Typography.Text strong>\n      <TeamOutlined /> {now} / {max} player{now === 1 ? \"\" : \"s\"} online\n    </Typography.Text>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { List, Avatar } from \"antd\";\n\nexport const PlayerItem = (props: { name: string }) => {\n  const [uuid, setUuid] = useState(\"\");\n  const { name } = props;\n\n  useEffect(() => {\n    fetch(`https://api.mojang.com/users/profiles/minecraft/${name}`)\n      .then((res) => res.json())\n      .then((response) => {\n        setUuid(response.id);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [name]);\n\n  return (\n    <List.Item.Meta\n      avatar={<Avatar src={`https://crafatar.com/avatars/${uuid}`} />}\n      title={name}\n    />\n  );\n};\n","import React from \"react\";\nimport { Typography, Divider, List } from \"antd\";\nimport { TeamOutlined } from \"@ant-design/icons\";\n\nimport { PlayerItem } from \"./player-item\";\n\nexport const PlayerList = (props: { data?: { list?: string[] } }) => {\n  if (!props.data || !props.data.list || props.data.list.length === 0) {\n    return null;\n  }\n\n  const list = props.data.list;\n\n  return (\n    <>\n      <Divider orientation=\"left\">Player List</Divider>\n      <List\n        dataSource={list}\n        size=\"large\"\n        renderItem={(item) => (\n          <List.Item>\n            <PlayerItem name={item} />\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Collapse, Row, Col, Divider } from \"antd\";\n\nimport Loading from \"./loading\";\nimport Error from \"./error\";\n\nimport { ServerAvatar } from \"./components/server-avatar\";\nimport { Online } from \"./components/online\";\nimport { PlayerCount } from \"./components/player-count\";\nimport { PlayerList } from \"./components/player-list\";\n\nexport type Payload = {\n  status: string;\n  online: boolean;\n  error?: string;\n  motd?: string;\n  favicon?: string;\n  version?: string;\n  game_type?: string;\n  game_id?: any;\n  server_mod?: string;\n  map?: any;\n  players?: {\n    max?: number;\n    now?: number;\n    list?: any[];\n  };\n  plugins?: any[];\n  last_online?: string;\n  last_updated?: string;\n  duration?: number;\n};\n\nexport type ServerProps = {\n  address: string;\n};\n\nexport type ServerState = {\n  loading: boolean;\n  data?: Payload;\n  error?: Error;\n};\n\nexport class ServerStatus extends React.Component<ServerProps, ServerState> {\n  constructor(props: ServerProps) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  componentDidMount() {\n    fetch(`https://mcapi.us/server/status?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!this.state.data) {\n          this.setState({ data, loading: false });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error, loading: false });\n        console.error(error);\n      });\n\n    fetch(`https://mcapi.us/server/query?ip=${this.props.address}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.online) {\n          this.setState({ data, loading: false });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error, loading: false });\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { loading, data, error } = this.state;\n    if (error) {\n      return <Error message={error.message} />;\n    }\n\n    if (loading) {\n      return <Loading />;\n    }\n\n    if (!data || data.error || data.status === \"error\") {\n      return <Error message={data ? data.error : \"No data found??\"} />;\n    }\n\n    return (\n      <>\n        <Row gutter={[16, 16]}>\n          <Col flex=\"128px\">\n            <ServerAvatar src={data.favicon} />\n          </Col>\n          <Col style={{ textAlign: \"initial\" }}>\n            <Online status={data.online} />\n            <PlayerCount data={data.players} />\n          </Col>\n        </Row>\n\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <PlayerList data={data.players} />\n          </Col>\n        </Row>\n\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Divider />\n            <Collapse ghost style={{ textAlign: \"initial\" }}>\n              <Collapse.Panel header=\"Raw Data\" key=\"1\">\n                <pre>{JSON.stringify(data, null, 2)}</pre>\n              </Collapse.Panel>\n            </Collapse>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { ServerStatus } from \"./server-state/server\";\nimport { Typography, Button, Layout, Form, Input, Divider } from \"antd\";\n\nimport \"antd/dist/antd.css\";\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  const params = new URLSearchParams(window.location.search);\n  const paramIp = params.get(\"ip\");\n\n  const onFinish = (values: { ip?: string }) => {\n    if (values.ip) {\n      params.set(\"ip\", values.ip);\n      window.location.search = params.toString();\n    }\n  };\n\n  return (\n    <Layout className=\"layout\">\n      <Header className=\"layout-header\">\n        <Typography.Title>Minecraft Server Status</Typography.Title>\n      </Header>\n      <Content className=\"layout-content\">\n        <Form\n          name=\"basic\"\n          layout=\"vertical\"\n          size=\"large\"\n          initialValues={{ ip: paramIp }}\n          onFinish={onFinish}\n        >\n          <Form.Item label=\"Server IP\" name=\"ip\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Go!\n            </Button>\n          </Form.Item>\n        </Form>\n\n        <Divider />\n\n        {paramIp && <ServerStatus key={paramIp} address={paramIp} />}\n      </Content>\n      <Footer className=\"layout-footer\">\n        Created by Samuel Lewis |{\" \"}\n        <a href=\"https://github.com/Samuel-Lewis\">GitHub</a>\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}